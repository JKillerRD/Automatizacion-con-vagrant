# Vagrantfile
Vagrant.configure("2") do |config|
  
    # Configuración para la máquina 1 (Servidor Apache 1)
    config.vm.define "web1" do |web1|
      web1.vm.box = "ubuntu/bionic64"
      web1.vm.hostname = "web1"
      web1.vm.network "private_network", ip: "192.168.33.10"
      web1.vm.provider "virtualbox" do |vb|
        vb.memory = "512"
        vb.cpus = "1"
      end
      # Directorio compartido
      web1.vm.synced_folder ".", "/var/www/html"
      
      # Instalación de Apache
      web1.vm.provision "shell", inline: <<-SHELL
        apt-get update
        apt-get install -y apache2
        systemctl enable apache2
        systemctl start apache2
      SHELL
    end
  
    # Configuración para la máquina 2 (Servidor Apache 2)
    config.vm.define "web2" do |web2|
      web2.vm.box = "ubuntu/bionic64"
      web2.vm.hostname = "web2"
      web2.vm.network "private_network", ip: "192.168.33.11"
      web2.vm.provider "virtualbox" do |vb|
        vb.memory = "512"
        vb.cpus = "1"
      end
      # Directorio compartido
      web2.vm.synced_folder ".", "/var/www/html"
      
      # Instalación de Apache
      web2.vm.provision "shell", inline: <<-SHELL
        apt-get update
        apt-get install -y apache2
        systemctl enable apache2
        systemctl start apache2
      SHELL
    end
  
    # Configuración para la máquina 3 (Servidor NGINX)
    config.vm.define "loadbalancer" do |lb|
      lb.vm.box = "ubuntu/bionic64"
      lb.vm.hostname = "loadbalancer"
      lb.vm.network "private_network", ip: "192.168.33.12"
      lb.vm.provider "virtualbox" do |vb|
        vb.memory = "512"
        vb.cpus = "1"
      end
  
      # Instalación de NGINX con configuración de balanceo de carga
      lb.vm.provision "shell", inline: <<-SHELL
        apt-get update
        apt-get install -y nginx
        cat > /etc/nginx/conf.d/load_balancer.conf <<EOF
        upstream web_servers {
          server 192.168.33.10;
          server 192.168.33.11;
        }
        server {
          listen 80;
          location / {
            proxy_pass http://web_servers;
          }
        }
        EOF
        systemctl restart nginx
      SHELL
    end
  end
  